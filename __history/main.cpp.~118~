//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "main.h"
#include <algorithm>
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForma *Forma;
//---------------------------------------------------------------------------
__fastcall TForma::TForma(TComponent* Owner)
	: TForm(Owner)
{
	Timer1->Interval = StrToInt(brzinaKamera->Text);

	for(int i = 0; i< kamere.size();i++){
		kamere[i].ugaoRotacije =StrToInt(ugaoRotacije->Text);
	}

	Slika->Canvas->FillRect(Rect(0,0,Slika->Width,Slika->Height));
	SlikaVidokruga->Canvas->FillRect(Rect(0,0,Slika->Width,Slika->Height));
}
//---------------------------------------------------------------------------
void TForma::dodajTacku(Tacka nova) {
	tacke.push_back(nova);
	nova.Crtaj(Slika);
}
//---------------------------------------------------------------------------
void TForma::dodajKameru(Kamera novaKamera) {
	kamere.push_back(novaKamera);
	novaKamera.crtaj(Slika);
}
//---------------------------------------------------------------------------
void __fastcall TForma::GenerisanjeTacakaClick(TObject *Sender)
{
  int broj_tacaka = EditBrojTacaka->Text.ToInt();
  for(int i=0;i<broj_tacaka;i++) {
	  Tacka nova(rand()%(Slika->Width),rand()%(Slika->Height));
	  dodajTacku(nova);
  }
}
//---------------------------------------------------------------------------

void __fastcall TForma::SlikaMouseMove(TObject *Sender, TShiftState Shift, int X,
          int Y)
{
	EditKoordinate->Text = "( " + IntToStr(X) + " , " + IntToStr(Y) + " )";
}
//---------------------------------------------------------------------------

void __fastcall TForma::DugmeProstiMnogougaoClick(TObject *Sender)
{
   for(int i=1;i<tacke.size();i++)
	 if(tacke[i] < tacke[0])
	   swap(tacke[i],tacke[0]);

   Tacka prva = tacke[0];
   sort(tacke.begin()+1,tacke.end(),[prva](Tacka A, Tacka B) {
										return Orijentacija(prva,A,B) < 0;
									});

   iscrtajPoligon(tacke,Slika);

}
//---------------------------------------------------------------------------

void __fastcall TForma::SlikaMouseDown(TObject *Sender, TMouseButton Button, TShiftState Shift,
		  int X, int Y)
{
	if(DodavanjeTacaka->Checked) {
		Tacka nova(X,Y);
		dodajTacku(nova);
	} else if(CrtanjeMnogougla->Checked) {
		Tacka nova(X,Y);
		if(!tacke.empty())
		   Slika->Canvas->LineTo(X,Y);
		else
			Slika->Canvas->MoveTo(X,Y);

		dodajTacku(nova);
	} else if(dodavanjeKamere->Checked) {
		Tacka nova(X,Y);
        Duz poluprava(Tacka(X,Y),Tacka(Slika->Width,Slika->Height));

		if(daLiJeUnutarProstogMnogougla(poluprava,tacke)){
			dodajKameru(Kamera(nova));
			kamere[kamere.size()-1].odrediVidokrug(tacke, Slika);
			kamere[kamere.size()-1].iscrtajVidokrug(SlikaVidokruga);

		} else
		  ShowMessage("Tacka nije unutar mnogougla");
	}
}

void __fastcall TForma::ZavrsiMnogougaoClick(TObject *Sender)
{
   Slika->Canvas->LineTo(tacke[0].x,tacke[0].y);
}
//---------------------------------------------------------------------------

void __fastcall TForma::ClearClick(TObject *Sender)
{
  Slika->Canvas->FillRect(Rect(0,0,Slika->Width,Slika->Height));
  SlikaVidokruga->Canvas->FillRect(Rect(0,0,Slika->Width,Slika->Height));
  SlikaVidokruga->Visible = false;
  tacke.clear();
  kamere.clear();
}
//---------------------------------------------------------------------------


void __fastcall TForma::stanjeSimulacijaClick(TObject *Sender)
{
	SlikaVidokruga->Visible = true;
}
//---------------------------------------------------------------------------

void __fastcall TForma::Timer1Timer(TObject *Sender)
{
	if(jePokrenutaSimulacija && kamere.size() != 0) {
		for(int i=0; i< kamere.size();i++){
			kamere[i].rotirajKameru();
		}

		SlikaVidokruga->Canvas->FillRect(Rect(0,0,Slika->Width,Slika->Height));

		for(int i=0; i< kamere.size();i++){
			kamere[i].odrediVidokrug(tacke, SlikaVidokruga);
			kamere[i].iscrtajVidokrug(SlikaVidokruga);

		}
	}
}
//---------------------------------------------------------------------------


void __fastcall TForma::DodavanjeTacakaClick(TObject *Sender)
{

	SlikaVidokruga->Visible = false;
}
//---------------------------------------------------------------------------

void __fastcall TForma::CrtanjeMnogouglaClick(TObject *Sender)
{
;
	SlikaVidokruga->Visible = false;
}
//---------------------------------------------------------------------------

void __fastcall TForma::UnutarProstogClick(TObject *Sender)
{

	SlikaVidokruga->Visible = false;
}
//---------------------------------------------------------------------------

void __fastcall TForma::dodavanjeKamereClick(TObject *Sender)
{

	SlikaVidokruga->Visible = false;
}
//---------------------------------------------------------------------------

void __fastcall TForma::akcijaSimulacijaClick(TObject *Sender)
{
	SlikaVidokruga->Canvas->FillRect(Rect(0,0,Slika->Width,Slika->Height));
	SlikaVidokruga->Visible = true;

	for(int i=0; i< kamere.size();i++){
		kamere[i].iscrtajVidokrug(SlikaVidokruga);
	}
}
//---------------------------------------------------------------------------

void __fastcall TForma::stanjeSimulacijeClick(TObject *Sender)
{
	if(!stanjeSimulacije->Checked){
		if(jePokrenutaSimulacija){
			jePokrenutaSimulacija = false;
		}
		SlikaVidokruga->Visible = false;
	} else {
		SlikaVidokruga->Visible = true;
    }
}
//---------------------------------------------------------------------------

void __fastcall TForma::resetSimulacijuClick(TObject *Sender)
{
	SlikaVidokruga->Canvas->FillRect(Rect(0,0,Slika->Width,Slika->Height));

	for(int i=0; i< kamere.size();i++){
		kamere[i].resetVidokrug();
		kamere[i].iscrtajVidokrug(SlikaVidokruga);
	}
}
//---------------------------------------------------------------------------

void __fastcall TForma::startSimulacijuClick(TObject *Sender)
{
	jePokrenutaSimulacija = true;
}
//---------------------------------------------------------------------------

void __fastcall TForma::stopSimulacijuClick(TObject *Sender)
{
    jePokrenutaSimulacija = false;
}
//---------------------------------------------------------------------------




void __fastcall TForma::brzinaKameraChange(TObject *Sender)
{
   if(jePokrenutaSimulacija){
			jePokrenutaSimulacija = false;
   }
   Timer1->Interval = StrToInt(brzinaKamera->Text);
}
//---------------------------------------------------------------------------

void __fastcall TForma::ugaoRotacijeChange(TObject *Sender)
{
   if(jePokrenutaSimulacija){
			jePokrenutaSimulacija = false;
   }
   for(int i = 0; i< kamere.size();i++){
		kamere[i].ugaoRotacije =StrToInt(ugaoRotacije->Text);
   }
}
//---------------------------------------------------------------------------

